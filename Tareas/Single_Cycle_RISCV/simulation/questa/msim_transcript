# Reading pref.tcl
# //  Questa Intel Starter FPGA Edition-64
# //  Version 2023.3 win64 Jul 17 2023
# //
# //  Copyright 1991-2023 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  QuestaSim and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# do Architecture_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Questa Intel Starter FPGA Edition-64 vmap 2023.3 Lib Mapping Utility 2023.07 Jul 17 2023
# vmap work rtl_work 
# Copying c:/intelfpga_lite/23.1std/questa_fse/win64/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/andyq/Documents/QuartusProjects/Architecture_code/SoC/Tareas/Single_Cycle_RISCV {C:/Users/andyq/Documents/QuartusProjects/Architecture_code/SoC/Tareas/Single_Cycle_RISCV/InstructionMemory.v}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 11:29:53 on May 28,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/andyq/Documents/QuartusProjects/Architecture_code/SoC/Tareas/Single_Cycle_RISCV" C:/Users/andyq/Documents/QuartusProjects/Architecture_code/SoC/Tareas/Single_Cycle_RISCV/InstructionMemory.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 11:29:53 on May 28,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+C:/Users/andyq/Documents/QuartusProjects/Architecture_code/SoC/Tareas/Single_Cycle_RISCV {C:/Users/andyq/Documents/QuartusProjects/Architecture_code/SoC/Tareas/Single_Cycle_RISCV/InstructionMemory_tb.v}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 11:29:53 on May 28,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/andyq/Documents/QuartusProjects/Architecture_code/SoC/Tareas/Single_Cycle_RISCV" C:/Users/andyq/Documents/QuartusProjects/Architecture_code/SoC/Tareas/Single_Cycle_RISCV/InstructionMemory_tb.v 
# -- Compiling module InstructionMemory_tb
# 
# Top level modules:
# 	InstructionMemory_tb
# End time: 11:29:53 on May 28,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L fiftyfivenm_ver -L rtl_work -L work -voptargs="+acc"  InstructionMemory_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L fiftyfivenm_ver -L rtl_work -L work -voptargs=""+acc"" InstructionMemory_tb 
# Start time: 11:29:53 on May 28,2025
# ** Note: (vsim-3812) Design is being optimized...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading work.InstructionMemory_tb(fast)
# Loading work.InstructionMemory(fast)
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# ==== Test de InstructionMemory ====
# Address = 0x00000000 | Instruction = 0x00500113
# Address = 0x00000004 | Instruction = 0x00c00193
# Address = 0x00000008 | Instruction = 0xff718393
# Address = 0x0000000c | Instruction = 0x0023e233
# Address = 0x00000010 | Instruction = 0x0041f2b3
# Address = 0x00000014 | Instruction = 0x004282b3
# Address = 0x00000018 | Instruction = 0x02728863
# Address = 0x0000001c | Instruction = 0x0041a233
# Address = 0x00000020 | Instruction = 0x00020463
# Address = 0x00000024 | Instruction = 0x00000293
# Address = 0x00000028 | Instruction = 0x0023a233
# Address = 0x0000002c | Instruction = 0x005203b3
# Address = 0x00000030 | Instruction = 0x402383b3
# Address = 0x00000034 | Instruction = 0x0471aa23
# Address = 0x00000038 | Instruction = 0x06002103
# Address = 0x0000003c | Instruction = 0x005104b3
# Address = 0x00000040 | Instruction = 0x008001ef
# Address = 0x00000044 | Instruction = 0x00100113
# Address = 0x00000048 | Instruction = 0x00910133
# Address = 0x0000004c | Instruction = 0x0221a023
# Address = 0x00000050 | Instruction = 0x00210063
# ==== Fin del test ====
# ** Note: $finish    : C:/Users/andyq/Documents/QuartusProjects/Architecture_code/SoC/Tareas/Single_Cycle_RISCV/InstructionMemory_tb.v(28)
#    Time: 105 ns  Iteration: 0  Instance: /InstructionMemory_tb
# 1
# Break in Module InstructionMemory_tb at C:/Users/andyq/Documents/QuartusProjects/Architecture_code/SoC/Tareas/Single_Cycle_RISCV/InstructionMemory_tb.v line 28
# End time: 11:32:05 on May 28,2025, Elapsed time: 0:02:12
# Errors: 0, Warnings: 1
